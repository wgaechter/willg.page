name: AWS-Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  PROJECT_LOCATION: PortfolioWebsite/PortfolioWebsite.csproj
  ELASTIC_BEANSTALK_NAME: willg.info
  ELASTIC_BEANSTALK_ENV_NAME: Willginfo-env

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_LOCATION }}
    - name: Build
      run: dotnet build --no-restore ${{ env.PROJECT_LOCATION }}
    - name: Pack
      run: |
        dotnet publish ${{ env.PROJECT_LOCATION }} -c Release --output "${{ github.workspace }}/publish"
        cd publish
        zip -r ../artifact.zip .
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.3.3
      with: 
        name: deploy-files
        path: artifact.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/download-artifact@v4.1.7
      with:
        name: deploy-files
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Deploy
      run: |
        aws s3 cp artifact.zip s3://elasticbeanstalk-us-east-1-${{ secrets.AWS_ACCOUNT_ID }}/artifact/portfolio/artifact.zip
        aws elasticbeanstalk create-application-version --application-name ${{ env.ELASTIC_BEANSTALK_NAME }} --version-label ${{ github.run_id }} --description ${{ github.run_id }} --source-bundle S3Bucket="elasticbeanstalk-us-east-1-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="artifact/portfolio/artifact.zip"
        aws elasticbeanstalk update-environment --application-name ${{ env.ELASTIC_BEANSTALK_NAME }} --environment-name ${{ env.ELASTIC_BEANSTALK_ENV_NAME }} --version-label ${{ github.run_id }}
        aws elasticbeanstalk wait environment-updated --application-name ${{ env.ELASTIC_BEANSTALK_NAME }} --environment-name ${{ env.ELASTIC_BEANSTALK_ENV_NAME }}

