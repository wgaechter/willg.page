@page
@using Microsoft.JSInterop;
@inject IJSRuntime JS;
@model PortfolioWebsite.Pages.ProjectsModel

@{
    ViewData["Title"] = "Projects";
}

@{
    //https://dev.to/2kabhishek/i-made-a-web-app-to-showcase-all-your-github-projects-le3

    //https://www.c-sharpcorner.com/article/working-with-sql-lite-database-in-asp-net-core-web-api/

    //https://codepen.io/alvaromontoro/pen/ebPEWb

    List<Models.RepoModel> repositories = Model._projects;

    if (repositories != null)
    {
        <div class="projectsWrapper">
            @foreach (var repo in repositories)
            {
                //Variables
                string repo_name_backend = repo.Name;
                string repo_name_frontend = repo_name_backend.Replace("_", " ");
                string? repo_desc = repo.Description;
                string html_Url = repo.HtmlUrl;

                if (!String.IsNullOrEmpty(repo.LanguageString) && !String.IsNullOrEmpty(repo_desc))
                {
                    string languageString = repo.LanguageString;
                    List<string> languageList = languageString.Split(',').Select(l => l.Trim()).ToList();
                    string mainLang = String.Empty;

                    if (languageList.First() == "HTML" | languageList.First() == "Jupyter Notebook")
                    {
                        try
                        {
                            mainLang = languageList.ElementAt(1);
                        }
                        catch
                        {
                            mainLang = languageList.First();
                        }

                    }
                    else
                    {
                        mainLang = languageList.First();
                    }

                    //Div Generation
                    <div class="repoHolder">
                        <div class="repo" id="@repo_name_backend">
                            <div class="cornerIcon">
                                @if (mainLang != null) //Corner Icon
                                {
                                    Model._language_icons.TryGetValue(mainLang, out var mainLang_icon);
                                    if (mainLang_icon != null)
                                    {
                                        int index = mainLang_icon.LastIndexOf(">");
                                        if (index >= 0)
                                        {
                                            mainLang_icon = mainLang_icon.Substring(0, (index + 1));
                                        }

                                        @Html.Raw(mainLang_icon)
                                    }
                                }
                            </div>
                            <h3 class="repo">@repo_name_frontend</h3>
                            <p class="repo">@repo_desc</p>
                            <div class="lang_container">
                                @if (languageList != null)
                                {
                                    foreach (var lang in languageList)
                                    {
                                        if (Model._language_icons.ContainsKey(lang))
                                        {
                                            Model._language_icons.TryGetValue(lang, out var icon);
                                            if (icon != null)
                                            {
                                                int i_index = icon.LastIndexOf(">");
                                                if (i_index >= 0)
                                                {
                                                    icon = icon.Substring(0, (i_index + 1));
                                                }
                                            }
                                            <span class="Lang_icon">@Html.Raw(icon)</span>
                                        }
                                    }
                                }
                            </div>
                        </div>
                        <a href=@html_Url></a>
                    </div>
                }
                else
                {
                    continue;
                }
            }
        </div>
        }
}
