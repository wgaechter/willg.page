@page
@using Microsoft.JSInterop;
@inject IJSRuntime JS;
@model PortfolioWebsite.Pages.ProjectsModel

@{ ViewData["Title"] = "Projects"; }

@{
    //https://dev.to/2kabhishek/i-made-a-web-app-to-showcase-all-your-github-projects-le3
    
    //https://www.c-sharpcorner.com/article/working-with-sql-lite-database-in-asp-net-core-web-api/

    List<Octokit.Repository> repositories = Model.GetPublicRepos().Result;

    if (repositories != null)
    {
        int repo_length = repositories.Count;

        Dictionary<string, IReadOnlyList<Octokit.RepositoryLanguage>> repo_languages = Model.getAllLanguagesForRepo(repositories).Result;

        for (int i = 0; i < repo_length;)
        {
            <div class="row" id="RepoRow@(i / 3)">
                @for (int k = 0; k < 3; k++)
                {
                    string repo_name_backend = repositories.ElementAt(i).Name;
                    string repo_name_frontend = repo_name_backend.Replace("_", " ");
                    string repo_desc = repositories.ElementAt(i).Description;
                    string html_Url = repositories.ElementAt(i).HtmlUrl;

                    <div class="repoHolder">
                        <div class="repo" id="@repo_name_backend">
                            <h3 class="repo">@repo_name_frontend</h3>
                            <p class="repo">@repo_desc</p>
                            <div class="lang_container">
                            @if (repo_languages.ContainsKey(repo_name_backend))
                                {
                                IReadOnlyList<Octokit.RepositoryLanguage> lang_list = repo_languages[repo_name_backend];
                                        foreach (Octokit.RepositoryLanguage lang in lang_list) 
                                        {
                                            if (lang != null)
                                            {
                                                Model._language_icons.TryGetValue(lang.Name, out var icon);
                                                <span class="Lang_icon">@Html.Raw(icon)</span>
                                            }
                                            else
                                            {
                                                //No lang in lang_list
                                                <span>@repositories.ElementAt(i).Language</span>
                                            }
                                        }
                                    }
                            </div>
                        </div>
                        <a href=@html_Url></a>
                    </div>

                    //Adds to i in the initial loop for the rows.  i will increase by 3 each loop when it returns to represent the 3 projects that are placed in each row.
                    if ((i + 1) == repo_length) //Checks if all projects have been rendered, if yes break, if no continue
                    {
                        i++;
                        break;
                    }
                    else
                    {
                        i++;
                    }
                }
            </div>
        }
    }
    else
    {
        <p style="display: block; text-align:center">Github API failed to return the public repositories.  Please reach out to me to correct the issue, thank you!</p>
    }
}
